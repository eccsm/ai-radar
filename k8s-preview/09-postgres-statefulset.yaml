apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  namespace: ai-radar
  labels:
    app: postgres
spec:
  serviceName: postgres
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
        role: db-server
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9187"
    spec:
      serviceAccountName: ai-radar-sa
      containers:
      - name: postgres
        image: ramsrib/pgvector:16
        ports:
        - containerPort: 5432
          name: postgres
        env:
        - name: POSTGRES_DB
          value: ai_radar
        - name: POSTGRES_USER
          value: ai
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: ai-radar-secrets
              key: postgres-password
        resources:
          requests:
            cpu: 500m
            memory: 512Mi
          limits:
            cpu: 1000m
            memory: 1Gi
        volumeMounts:
        - name: postgres-data
          mountPath: /var/lib/postgresql/data
        livenessProbe:
          exec:
            command: ["pg_isready", "-U", "ai"]
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          exec:
            command: ["pg_isready", "-U", "ai"]
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 1
      volumes:
      - name: postgres-data
        persistentVolumeClaim:
          claimName: postgres-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: ai-radar
  labels:
    app: postgres
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9187"
spec:
  ports:
  - port: 5432
    targetPort: 5432
    name: postgres
  selector:
    app: postgres
  clusterIP: None # Headless service for StatefulSet
---
